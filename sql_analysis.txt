---- **Customer Behavior Insights**----


  ---Repeat Orders: Track repeat orders of certain items or categories over time.---
  SELECT
    ITEM_ID,
    TO_CHAR(ORDER_DATE, 'YYYY-MM') AS ORDER_MONTH,
    COUNT(*) AS MONTHLY_ORDERS
FROM
    ORDERS
GROUP BY
    ITEM_ID,
    TO_CHAR(ORDER_DATE, 'YYYY-MM')
HAVING
    COUNT(*) > 1
ORDER BY
    ITEM_ID,
    ORDER_MONTH;





      ----Popular Item Combinations: Identify frequently ordered item combinations----.

      WITH order_pairs AS (
    SELECT
        o1.order_id,o1.item_id AS item_id1,o2.item_id AS item_id2
        
    FROM
        orders o1
    JOIN
        orders o2 ON o1.order_id = o2.order_id
    WHERE
        o1.item_id < o2.item_id
)
SELECT
    item_id1,item_id2,COUNT(*) AS combination_count
    FROM
    order_pairs
GROUP BY
    item_id1,item_id2
    HAVING COUNT(*) > 1
    ORDER BY combination_count DESC;

    select *from orders
    select * from menu

----Category Analysis: Analyze sales performance by different categories (e.g., American, Italian)----
select 
m.menu_item_id,
m.item_name,
sum(m.price) as Total_item_sales
from menu m left join orders o on o.item_id = m.menu_item_id
group by m.menu_item_id,m.item_name
order by sum(m.price) desc;
---
Query -7
--Top-Selling Items by quantity highlight with case function:--
select 
m.item_name,
count(*) as quantity_soldout,
case 
when count(*) >=20 then 'high sale'
when count(*) <20 then 'low sale'
else'no sales'
end as status
from menu m left join orders o on o.item_id = m.menu_item_id
group by m.item_name
order by count(*) desc;





Query-1 
--Total Sales: Calulate the total sales revenue generated by each menu item and overall--
--output:--

Select
m.menu_item_id, m.ITEM_NAME, m.category, SUM(m.price)AS Total_sales_revenue
from menu M left join orders o On m.menu_item_id = o.item_id
GROUP by m.menu_item_id, m.ITEM_NAME,m.category;


----
--Best-Selling Items: Identify the top-selling items and their contribution to total sales--

select Details.ITEM_NAME,
       Details. Total_sales_revenue,
       round((Details. Total_sales_revenue / overall_sales)* 100,2) AS contribution_of_Overall_Sales from
       (select sum(sales.Total_sales) as overall sales from
        (Select
           m.menu_item_id,
           m.ITEM_NAME, 
           m.category, SUM(m.price) AS Total_sales
        from menu M left join orders o On m.menu_item_id = o.item_id
        GROUP by m.menu_item_id, m.ITEM_NAME,m.category)sales
        )sales_S
       cross join (
    SELECT *
    FROM (
          SELECT
               m.ITEM_NAME,
               SUM(m.price) AS Total_sales_revenue
           FROM menu m LEFT JOIN orders o ON m.menu_item_id = o.item_id
           GROUP BY m.ITEM_NAME
           ORDER BY Total_sales_revenue DESC
    ) Details
) Details
fetch first 5 rows only;